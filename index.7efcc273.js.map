{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write your code here\nvar FOUR_CHANCE = 0.1;\nvar ROWS = 4;\nvar COLS = 4;\nvar table = document.querySelector(\"table\");\nvar tBody = table.tBodies[0];\nvar button = document.querySelector(\".button\");\nvar allCells = document.querySelectorAll(\"td\");\nvar startMessage = document.querySelector(\".message-start\");\nvar loseMessage = document.querySelector(\".message-lose\");\nvar winMessage = document.querySelector(\".message-win\");\nvar gameScore = document.querySelector(\".game-score\");\nvar gameStarted = false;\nvar score = 0;\nbutton.addEventListener(\"click\", function() {\n    startMessage.classList.add(\"hidden\");\n    winMessage.classList.add(\"hidden\");\n    loseMessage.classList.add(\"hidden\");\n    button.classList.replace(\"start\", \"restart\");\n    button.textContent = \"Restart\";\n    score = 0;\n    gameScore.textContent = 0;\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allCells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var element = _step.value;\n            if (element.classList.length < 2) continue;\n            element.className = \"field-cell\";\n            element.textContent = \"\";\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    createRandomElement();\n    createRandomElement();\n    gameStarted = true;\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowDown\":\n            e.preventDefault();\n            if (gameStarted) handleArrowDown();\n            break;\n        case \"ArrowUp\":\n            e.preventDefault();\n            if (gameStarted) handleArrowUp();\n            break;\n        case \"ArrowLeft\":\n            e.preventDefault();\n            if (gameStarted) handleArrowLeft();\n            break;\n        case \"ArrowRight\":\n            e.preventDefault();\n            if (gameStarted) handleArrowRight();\n            break;\n        default:\n            break;\n    }\n    if (isLost()) loseMessage.classList.remove(\"hidden\");\n});\nfunction createRandomElement() {\n    var chance = Math.random();\n    var listOfFreeSpots = freeSpots();\n    if (chance <= FOUR_CHANCE) {\n        var element = getRandomSpot(listOfFreeSpots);\n        element.textContent = \"4\";\n        element.classList.add(\"field-cell--4\");\n    } else {\n        var element1 = getRandomSpot(listOfFreeSpots);\n        element1.textContent = \"2\";\n        element1.classList.add(\"field-cell--2\");\n    }\n}\nfunction getRandomSpot(list) {\n    return list[Math.floor(Math.random() * list.length)];\n}\nfunction freeSpots() {\n    var listOfFreeSpots = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allCells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var element = _step.value;\n            if (element.classList.length < 2) listOfFreeSpots.push(element);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return listOfFreeSpots;\n}\nfunction activeSpots() {\n    var listOfActiveSpots = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allCells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var element = _step.value;\n            if (element.classList.length > 1) listOfActiveSpots.push(element);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return listOfActiveSpots;\n}\nfunction elementMove(elem, nextElem) {\n    var classValue = elem.classList[1];\n    var value = elem.textContent;\n    elem.className = \"field-cell\";\n    elem.textContent = \"\";\n    nextElem.classList.add(classValue);\n    nextElem.textContent = value;\n}\nfunction elementsMerge(elem, nextElem) {\n    var number = +nextElem.textContent;\n    number *= 2;\n    score += number;\n    gameScore.textContent = score;\n    elem.className = \"field-cell\";\n    elem.textContent = \"\";\n    nextElem.className = \"field-cell\";\n    nextElem.textContent = number;\n    nextElem.classList.add(\"field-cell--\".concat(number));\n    nextElem.id = \"merged\";\n    if (number === 2048) winMessage.classList.remove(\"hidden\");\n}\nfunction handleArrowDown() {\n    if (isLost()) return;\n    var listOfActiveSpots = activeSpots();\n    var actionsCounter = 0;\n    for(var i = listOfActiveSpots.length - 1; i >= 0; i--){\n        var col = listOfActiveSpots[i].cellIndex;\n        var row = +listOfActiveSpots[i].parentElement.id;\n        var listOfColumnElements = [];\n        if (row === 3) continue;\n        for(var j = row; j < tBody.rows.length; j++)listOfColumnElements.push(tBody.rows[j].cells[col]);\n        for(var j1 = 1; j1 < listOfColumnElements.length; j1++){\n            var elem = listOfColumnElements[j1 - 1];\n            var nextElem = listOfColumnElements[j1];\n            var mergeCondition = elem.textContent === nextElem.textContent && !elem.id && !nextElem.id;\n            if (nextElem.classList.length < 2) {\n                elementMove(elem, nextElem);\n                actionsCounter++;\n            } else if (mergeCondition) {\n                elementsMerge(elem, nextElem);\n                actionsCounter++;\n            }\n        }\n    }\n    listOfActiveSpots.forEach(function(elem) {\n        return elem.removeAttribute(\"id\");\n    });\n    if (actionsCounter > 0) createRandomElement();\n}\nfunction handleArrowUp() {\n    if (isLost()) return;\n    var listOfActiveSpots = activeSpots();\n    var actionsCounter = 0;\n    for(var i = 0; i < listOfActiveSpots.length; i++){\n        var col = listOfActiveSpots[i].cellIndex;\n        var row = +listOfActiveSpots[i].parentElement.id;\n        var listOfColumnElements = [];\n        if (row === 0) continue;\n        for(var j = row; j >= 0; j--)listOfColumnElements.push(tBody.rows[j].cells[col]);\n        for(var j1 = 0; j1 < listOfColumnElements.length - 1; j1++){\n            var elem = listOfColumnElements[j1];\n            var nextElem = listOfColumnElements[j1 + 1];\n            var mergeCondition = elem.textContent === nextElem.textContent && !elem.id && !nextElem.id;\n            if (nextElem.classList.length < 2) {\n                elementMove(elem, nextElem);\n                actionsCounter++;\n            } else if (mergeCondition) {\n                elementsMerge(elem, nextElem);\n                actionsCounter++;\n            }\n        }\n    }\n    listOfActiveSpots.forEach(function(elem) {\n        return elem.removeAttribute(\"id\");\n    });\n    if (actionsCounter > 0) createRandomElement();\n}\nfunction handleArrowLeft() {\n    if (isLost()) return;\n    var listOfActiveSpots = activeSpots();\n    var actionsCounter = 0;\n    for(var i = 0; i < listOfActiveSpots.length; i++){\n        var col = listOfActiveSpots[i].cellIndex;\n        var row = +listOfActiveSpots[i].parentElement.id;\n        var listOfRowElements = [];\n        if (col === 0) continue;\n        for(var j = col; j >= 0; j--)listOfRowElements.push(tBody.rows[row].cells[j]);\n        for(var j1 = 0; j1 < listOfRowElements.length - 1; j1++){\n            var elem = listOfRowElements[j1];\n            var nextElem = listOfRowElements[j1 + 1];\n            var mergeCondition = elem.textContent === nextElem.textContent && !elem.id && !nextElem.id;\n            if (nextElem.classList.length < 2) {\n                elementMove(elem, nextElem);\n                actionsCounter++;\n            } else if (mergeCondition) {\n                elementsMerge(elem, nextElem);\n                actionsCounter++;\n            }\n        }\n    }\n    listOfActiveSpots.forEach(function(elem) {\n        return elem.removeAttribute(\"id\");\n    });\n    if (actionsCounter > 0) createRandomElement();\n}\nfunction handleArrowRight() {\n    if (isLost()) return;\n    var listOfActiveSpots = activeSpots();\n    var actionsCounter = 0;\n    for(var i = listOfActiveSpots.length - 1; i >= 0; i--){\n        var col = listOfActiveSpots[i].cellIndex;\n        var row = +listOfActiveSpots[i].parentElement.id;\n        var listOfRowElements = [];\n        if (col === 3) continue;\n        for(var j = col; j < tBody.rows.length; j++)listOfRowElements.push(tBody.rows[row].cells[j]);\n        for(var j1 = 1; j1 < listOfRowElements.length; j1++){\n            var elem = listOfRowElements[j1 - 1];\n            var nextElem = listOfRowElements[j1];\n            var mergeCondition = elem.textContent === nextElem.textContent && !elem.id && !nextElem.id;\n            if (nextElem.classList.length < 2) {\n                elementMove(elem, nextElem);\n                actionsCounter++;\n            } else if (mergeCondition) {\n                elementsMerge(elem, nextElem);\n                actionsCounter++;\n            }\n        }\n    }\n    listOfActiveSpots.forEach(function(elem) {\n        return elem.removeAttribute(\"id\");\n    });\n    if (actionsCounter > 0) createRandomElement();\n}\nfunction isLost() {\n    if (freeSpots().length > 0) return false;\n    for(var r = 0; r < ROWS; r++)for(var c = 0; c < COLS - 1; c++){\n        if (tBody.rows[r].cells[c].textContent === tBody.rows[r].cells[c + 1].textContent) return false;\n    }\n    for(var r1 = 0; r1 < ROWS - 1; r1++)for(var c1 = 0; c1 < COLS; c1++){\n        if (tBody.rows[r1].cells[c1].textContent === tBody.rows[r1 + 1].cells[c1].textContent) return false;\n    }\n    return true;\n}\n\n//# sourceMappingURL=index.7efcc273.js.map\n","'use strict';\n\n// write your code here\nconst FOUR_CHANCE = 0.1;\nconst ROWS = 4;\nconst COLS = 4;\n\nconst table = document.querySelector('table');\nconst tBody = table.tBodies[0];\nconst button = document.querySelector('.button');\nconst allCells = document.querySelectorAll('td');\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\n\nlet gameStarted = false;\nlet score = 0;\n\nbutton.addEventListener('click', () => {\n  startMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n\n  button.classList.replace('start', 'restart');\n  button.textContent = 'Restart';\n\n  score = 0;\n  gameScore.textContent = 0;\n\n  for (const element of allCells) {\n    if (element.classList.length < 2) {\n      continue;\n    }\n\n    element.className = 'field-cell';\n    element.textContent = '';\n  }\n\n  createRandomElement();\n  createRandomElement();\n  gameStarted = true;\n});\n\ndocument.addEventListener('keydown', e => {\n  switch (e.key) {\n    case 'ArrowDown':\n      e.preventDefault();\n\n      if (gameStarted) {\n        handleArrowDown();\n      }\n      break;\n\n    case 'ArrowUp':\n      e.preventDefault();\n\n      if (gameStarted) {\n        handleArrowUp();\n      }\n      break;\n\n    case 'ArrowLeft':\n      e.preventDefault();\n\n      if (gameStarted) {\n        handleArrowLeft();\n      }\n      break;\n\n    case 'ArrowRight':\n      e.preventDefault();\n\n      if (gameStarted) {\n        handleArrowRight();\n      }\n      break;\n\n    default:\n      break;\n  }\n\n  if (isLost()) {\n    loseMessage.classList.remove('hidden');\n  }\n});\n\nfunction createRandomElement() {\n  const chance = Math.random();\n  const listOfFreeSpots = freeSpots();\n\n  if (chance <= FOUR_CHANCE) {\n    const element = getRandomSpot(listOfFreeSpots);\n\n    element.textContent = '4';\n    element.classList.add('field-cell--4');\n  } else {\n    const element = getRandomSpot(listOfFreeSpots);\n\n    element.textContent = '2';\n    element.classList.add('field-cell--2');\n  }\n}\n\nfunction getRandomSpot(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction freeSpots() {\n  const listOfFreeSpots = [];\n\n  for (const element of allCells) {\n    if (element.classList.length < 2) {\n      listOfFreeSpots.push(element);\n    }\n  }\n\n  return listOfFreeSpots;\n}\n\nfunction activeSpots() {\n  const listOfActiveSpots = [];\n\n  for (const element of allCells) {\n    if (element.classList.length > 1) {\n      listOfActiveSpots.push(element);\n    }\n  }\n\n  return listOfActiveSpots;\n}\n\nfunction elementMove(elem, nextElem) {\n  const classValue = elem.classList[1];\n  const value = elem.textContent;\n\n  elem.className = 'field-cell';\n  elem.textContent = '';\n\n  nextElem.classList.add(classValue);\n  nextElem.textContent = value;\n}\n\nfunction elementsMerge(elem, nextElem) {\n  let number = +nextElem.textContent;\n\n  number *= 2;\n\n  score += number;\n  gameScore.textContent = score;\n\n  elem.className = 'field-cell';\n  elem.textContent = '';\n\n  nextElem.className = 'field-cell';\n  nextElem.textContent = number;\n  nextElem.classList.add(`field-cell--${number}`);\n  nextElem.id = 'merged';\n\n  if (number === 2048) {\n    winMessage.classList.remove('hidden');\n  }\n}\n\nfunction handleArrowDown() {\n  if (isLost()) {\n    return;\n  }\n\n  const listOfActiveSpots = activeSpots();\n  let actionsCounter = 0;\n\n  for (let i = listOfActiveSpots.length - 1; i >= 0; i--) {\n    const col = listOfActiveSpots[i].cellIndex;\n    const row = +listOfActiveSpots[i].parentElement.id;\n    const listOfColumnElements = [];\n\n    if (row === 3) {\n      continue;\n    }\n\n    for (let j = row; j < tBody.rows.length; j++) {\n      listOfColumnElements.push(tBody.rows[j].cells[col]);\n    }\n\n    for (let j = 1; j < listOfColumnElements.length; j++) {\n      const elem = listOfColumnElements[j - 1];\n      const nextElem = listOfColumnElements[j];\n      const mergeCondition = (\n        elem.textContent === nextElem.textContent\n        && !elem.id\n        && !nextElem.id\n      );\n\n      if (nextElem.classList.length < 2) {\n        elementMove(elem, nextElem);\n        actionsCounter++;\n      } else if (mergeCondition) {\n        elementsMerge(elem, nextElem);\n        actionsCounter++;\n      }\n    }\n  }\n\n  listOfActiveSpots.forEach(elem => elem.removeAttribute('id'));\n\n  if (actionsCounter > 0) {\n    createRandomElement();\n  }\n}\n\nfunction handleArrowUp() {\n  if (isLost()) {\n    return;\n  }\n\n  const listOfActiveSpots = activeSpots();\n  let actionsCounter = 0;\n\n  for (let i = 0; i < listOfActiveSpots.length; i++) {\n    const col = listOfActiveSpots[i].cellIndex;\n    const row = +listOfActiveSpots[i].parentElement.id;\n    const listOfColumnElements = [];\n\n    if (row === 0) {\n      continue;\n    }\n\n    for (let j = row; j >= 0; j--) {\n      listOfColumnElements.push(tBody.rows[j].cells[col]);\n    }\n\n    for (let j = 0; j < listOfColumnElements.length - 1; j++) {\n      const elem = listOfColumnElements[j];\n      const nextElem = listOfColumnElements[j + 1];\n      const mergeCondition = (\n        elem.textContent === nextElem.textContent\n        && !elem.id\n        && !nextElem.id\n      );\n\n      if (nextElem.classList.length < 2) {\n        elementMove(elem, nextElem);\n        actionsCounter++;\n      } else if (mergeCondition) {\n        elementsMerge(elem, nextElem);\n        actionsCounter++;\n      }\n    }\n  }\n\n  listOfActiveSpots.forEach(elem => elem.removeAttribute('id'));\n\n  if (actionsCounter > 0) {\n    createRandomElement();\n  }\n}\n\nfunction handleArrowLeft() {\n  if (isLost()) {\n    return;\n  }\n\n  const listOfActiveSpots = activeSpots();\n  let actionsCounter = 0;\n\n  for (let i = 0; i < listOfActiveSpots.length; i++) {\n    const col = listOfActiveSpots[i].cellIndex;\n    const row = +listOfActiveSpots[i].parentElement.id;\n    const listOfRowElements = [];\n\n    if (col === 0) {\n      continue;\n    }\n\n    for (let j = col; j >= 0; j--) {\n      listOfRowElements.push(tBody.rows[row].cells[j]);\n    }\n\n    for (let j = 0; j < listOfRowElements.length - 1; j++) {\n      const elem = listOfRowElements[j];\n      const nextElem = listOfRowElements[j + 1];\n      const mergeCondition = (\n        elem.textContent === nextElem.textContent\n        && !elem.id\n        && !nextElem.id\n      );\n\n      if (nextElem.classList.length < 2) {\n        elementMove(elem, nextElem);\n        actionsCounter++;\n      } else if (mergeCondition) {\n        elementsMerge(elem, nextElem);\n        actionsCounter++;\n      }\n    }\n  }\n\n  listOfActiveSpots.forEach(elem => elem.removeAttribute('id'));\n\n  if (actionsCounter > 0) {\n    createRandomElement();\n  }\n}\n\nfunction handleArrowRight() {\n  if (isLost()) {\n    return;\n  }\n\n  const listOfActiveSpots = activeSpots();\n  let actionsCounter = 0;\n\n  for (let i = listOfActiveSpots.length - 1; i >= 0; i--) {\n    const col = listOfActiveSpots[i].cellIndex;\n    const row = +listOfActiveSpots[i].parentElement.id;\n    const listOfRowElements = [];\n\n    if (col === 3) {\n      continue;\n    }\n\n    for (let j = col; j < tBody.rows.length; j++) {\n      listOfRowElements.push(tBody.rows[row].cells[j]);\n    }\n\n    for (let j = 1; j < listOfRowElements.length; j++) {\n      const elem = listOfRowElements[j - 1];\n      const nextElem = listOfRowElements[j];\n      const mergeCondition = (\n        elem.textContent === nextElem.textContent\n        && !elem.id\n        && !nextElem.id\n      );\n\n      if (nextElem.classList.length < 2) {\n        elementMove(elem, nextElem);\n        actionsCounter++;\n      } else if (mergeCondition) {\n        elementsMerge(elem, nextElem);\n        actionsCounter++;\n      }\n    }\n  }\n\n  listOfActiveSpots.forEach(elem => elem.removeAttribute('id'));\n\n  if (actionsCounter > 0) {\n    createRandomElement();\n  }\n}\n\nfunction isLost() {\n  if (freeSpots().length > 0) {\n    return false;\n  }\n\n  for (let r = 0; r < ROWS; r++) {\n    for (let c = 0; c < COLS - 1; c++) {\n      if (tBody.rows[r].cells[c].textContent\n        === tBody.rows[r].cells[c + 1].textContent) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < ROWS - 1; r++) {\n    for (let c = 0; c < COLS; c++) {\n      if (tBody.rows[r].cells[c].textContent\n        === tBody.rows[r + 1].cells[c].textContent) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"],"names":["tBody","table","document","querySelector","tBodies","button","allCells","querySelectorAll","startMessage","loseMessage","winMessage","gameScore","gameStarted","score","createRandomElement","listOfFreeSpots","freeSpots","chance","Math","random","element","getRandomSpot","textContent","classList","add","element1","list","floor","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","activeSpots","listOfActiveSpots","elementMove","elem","nextElem","classValue","className","elementsMerge","number","concat","id","remove","isLost","r","c","COLS","rows","cells","r1","ROWS","c1","addEventListener","replace","e","key","preventDefault","handleArrowDown","actionsCounter","i","col","cellIndex","row","parentElement","listOfColumnElements","j","j1","mergeCondition","forEach","removeAttribute","handleArrowUp","handleArrowLeft","listOfRowElements","handleArrowRight"],"version":3,"file":"index.7efcc273.js.map"}